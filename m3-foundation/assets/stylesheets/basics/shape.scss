$m3-sys-shape-corner-extra-small: 4px;
$m3-sys-shape-corner-small: 8px;
$m3-sys-shape-corner-medium: 12px;
$m3-sys-shape-corner-large: 16px;

$m3-sys-shape-corner-map: (
  'extra-small': $m3-sys-shape-corner-extra-small,
  'small': $m3-sys-shape-corner-small,
  'medium': $m3-sys-shape-corner-medium,
  'large': $m3-sys-shape-corner-large,
);

@function get-corner($keyOrValue) {
  @if map-has-key($m3-sys-shape-corner-map, $keyOrValue) {
    @return map-get($m3-sys-shape-corner-map, $keyOrValue);
  } @else {
    @return $keyOrValue;
  }
}

@mixin corner($radius) {
  border-radius: get-corner($radius);
}

@mixin corner-left($radius) {
  border-top-left-radius: get-corner($radius);
  border-bottom-left-radius: get-corner($radius);
}

@mixin corner-top($radius) {
  border-top-left-radius: get-corner($radius);
  border-top-right-radius: get-corner($radius);
}

@mixin corner-right($radius) {
  border-top-right-radius: get-corner($radius);
  border-bottom-right-radius: get-corner($radius);
}

@mixin corner-bottom($radius) {
  border-bottom-left-radius: get-corner($radius);
  border-bottom-right-radius: get-corner($radius);
}

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin circle($diameter) {
  width: $diameter;
  height: $diameter;
  border-radius: 50%;
}

@mixin reset-box-sizing() {
  &,
  &::before,
  &::after,
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
}